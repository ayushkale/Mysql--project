------ #### PIZZA HUT SALES SQL PROJECT -----#### -----

create database Pizza_hut;

use Pizza_hut;

create table pizza_type (
pizza_type_id varchar(100),
name_ varchar(100),
category text,
ingredients text,
primary key (pizza_type_id)
);

select * from pizza_type;

insert into pizza_type(pizza_type_id,name_,category,ingredients)
values 
("bbq_ckn", "The Barbecue Chicken Pizza", "Chicken","Barbecued Chicken, Red Peppers, Green Peppers, Tomatoes, Red Onions, Barbecue Sauce"),
("cali_ckn",	"The California Chicken Pizza",	"Chicken",	"Chicken, Artichoke, Spinach, Garlic, Jalapeno Peppers, Fontina Cheese, Gouda Cheese"),
("ckn_alfredo",	"The Chicken Alfredo Pizza",	"Chicken",	"Chicken, Red Onions, Red Peppers, Mushrooms, Asiago Cheese, Alfredo Sauce"),
("ckn_pesto",	"The Chicken Pesto Pizza",	"Chicken",	"Chicken, Tomatoes, Red Peppers, Spinach, Garlic, Pesto Sauce"),
("southw_ckn",	"The Southwest Chicken Pizza",	"Chicken",        "Chicken, Tomatoes, Red Peppers, Red Onions, Jalapeno Peppers, Corn, Cilantro, Chipotle Sauce"),
("thai_ckn",	"The Thai Chicken Pizza",	"Chicken",        	"Chicken,  Pineapple, Tomatoes, Red Peppers, Thai Sweet Chilli Sauce"),
("big_meat",	"The Big Meat Pizza",	"Classic", 	        "Bacon, Pepperoni, Italian Sausage, Chorizo Sausage"),
("classic_dlx",	"The Classic Deluxe Pizza",	"Classic", 	"Pepperoni, Mushrooms, Red Onions, Red Peppers, Bacon"),
("Hawaiian",	"The Hawaiian Pizza",	"Classic",	        "Sliced Ham, Pineapple, Mozzarella Cheese"),
("ital_cpcllo",	"The Italian Capocollo Pizza",	"Classic",	"Capocollo, Red Peppers, Tomatoes, Goat Cheese, Garlic, Oregano"),
("napolitana",	"The Napolitana Pizza",	"Classic",	        "Tomatoes, Anchovies, Green Olives, Red Onions, Garlic"),
("pep_msh_pep",	"The Pepperoni, Mushroom, and Peppers Pizza","Classic",	"Pepperoni, Mushrooms, Green Peppers"),
("pepperoni",	"The Pepperoni Pizza",	"Classic",	        "Mozzarella Cheese, Pepperoni"),
("the_greek",	"The Greek Pizza",	"Classic",	        "Kalamata Olives, Feta Cheese, Tomatoes, Garlic, Beef Chuck Roast, Red Onions"),
("brie_carre",	"The Brie Carre Pizza",	"Supreme",	 "Brie Carre Cheese, Prosciutto, Caramelized Onions, Pears, Thyme, Garlic"),
("calabrese",	"The Calabrese Pizza",	"Supreme",	"â€˜Nduja Salami, Pancetta, Tomatoes, Red Onions, Friggitello Peppers, Garlic"),
("ital_supr",	"The Italian Supreme Pizza",	"Supreme",	"Calabrese Salami, Capocollo, Tomatoes, Red Onions, Green Olives, Garlic"),
("peppr_salami",	"The Pepper Salami Pizza",	"Supreme",	"Genoa Salami, Capocollo, Pepperoni, Tomatoes, Asiago Cheese, Garlic"),
("prsc_argla",	"The Prosciutto and Arugula Pizza",	"Supreme", 	"Prosciutto di San Daniele, Arugula, Mozzarella Cheese"),
("sicilian",	"The Sicilian Pizza",	"Supreme",	        "Coarse Sicilian Salami, Tomatoes, Green Olives, Luganega Sausage, Onions, Garlic"),
("soppressata",	"The Soppressata Pizza",	"Supreme",	        "Soppressata Salami, Fontina Cheese, Mozzarella Cheese, Mushrooms, Garlic"),
("spicy_ital",	"The Spicy Italian Pizza",	"Supreme",	"Capocollo, Tomatoes, Goat Cheese, Artichokes, Peperoncini verdi, Garlic"),
("spinach_supr",	"The Spinach Supreme Pizza",	"Supreme",	"Spinach, Red Onions, Pepperoni, Tomatoes, Artichokes, Kalamata Olives, Garlic, Asiago Cheese"),
("five_cheese",	"The Five Cheese Pizza",	"Veggie",	"Mozzarella Cheese, Provolone Cheese, Smoked Gouda Cheese, Romano Cheese, Blue Cheese, Garlic"),
("four_cheese",	"The Four Cheese Pizza", "Veggie",	"Ricotta Cheese, Gorgonzola Piccante Cheese, Mozzarella Cheese, Parmigiano Reggiano Cheese, Garlic"),
("green_garden",	"The Green Garden Pizza",	"Veggie",	"Spinach, Mushrooms, Tomatoes, Green Olives, Feta Cheese"),
("ital_veggie",	"The Italian Vegetables Pizza",	"Veggie", 	"Eggplant, Artichokes, Tomatoes, Zucchini, Red Peppers, Garlic, Pesto Sauce"),
("mediterraneo",	"The Mediterranean Pizza",	"Veggie",	"Spinach, Artichokes, Kalamata Olives, Sun-dried Tomatoes, Feta Cheese, Plum Tomatoes, Red Onions"),
("Mexicana","The Mexicana Pizza","Veggie","Tomatoes, Red Peppers, Jalapeno Peppers, Red Onions, Cilantro, Corn, Chipotle Sauce, Garlic"),
("spin_pesto","The Spinach Pesto Pizza",	"Veggie",	"Spinach, Artichokes, Tomatoes, Sun-dried Tomatoes, Garlic, Pesto Sauce"),
("spinach_fet","The Spinach and Feta Pizza",	"Veggie",	"Spinach, Mushrooms, Red Onions, Feta Cheese, Garlic"),
("veggie_veg","The Vegetables + Vegetables Pizza","Veggie","Mushrooms, Tomatoes, Red Peppers, Green Peppers, Red Onions, Zucchini, Spinach, Garlic");

-- ----  --- ----------- #####
select * from pizza_type;
## Basic: --1. Retrieve the total number of orders placed.

select count(order_id) from orders;

-- # --

## --2. Calculate the total revenue generated from pizza sales.

SELECT 
    ROUND(SUM(order_details.quantity * pizzas.price),
            2) AS total_revenue
FROM
    order_details
        JOIN
    pizzas ON pizzas.pizza_id = order_details.pizza_id;

-- # --

## --3. Identify the highest-priced pizza.
SELECT 
    pizza_type.name_, pizzas.price
FROM
    pizza_type
        JOIN
    pizzas ON pizza_type.pizza_type_id = pizzas.pizza_type_id
ORDER BY pizzas.price DESC
LIMIT 1;

-- # --

## --4. Identify the most common pizza size ordered.
SELECT 
    pizzas.size,
    COUNT(order_details.order_details_id) AS order_count
FROM
    pizzas
        JOIN
    order_details ON pizzas.pizza_id = order_details.pizza_id
GROUP BY pizzas.size
ORDER BY order_count DESC;
 
-- # --

## --5. List the top 5 most ordered pizza types along with their quantities.
SELECT 
    pizza_type.name_, sum(order_details.quantity) AS quantity
FROM
    pizza_type
        JOIN
    pizzas ON pizza_type.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON pizzas.pizza_id = order_details.pizza_id
GROUP BY pizza_type.name_
ORDER BY quantity desc limit 5; 

-- # --

## 6. Join the necessary table to find the total quantity of each pizzas category ordered. 
SELECT 
    pizza_type.category, SUM(order_details.quantity) AS quantity
FROM
    pizza_type
        JOIN
    pizzas ON pizzas.pizza_type_id = pizza_type.pizza_type_id
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_type.category
ORDER BY quantity;

-- # -- 

## 7. detemine the distribution of order by hour of the day.
SELECT 
    HOUR(orders.time), COUNT(orders.order_id) AS order_count
FROM
    orders
GROUP BY HOUR(orders.time)
ORDER BY order_count DESC;

-- # -- 

## 8. Join the relevant table to find the category-wise distribution of pizzas
SELECT 
    category, COUNT(name_)
FROM
    pizza_type
GROUP BY category;
 
-- # --

## 9. Group the orders by date and calculate the avg number of pizzas order per day 
SELECT 
    round(AVG(quantity),1) as AVG_order_per_day
FROM
    (SELECT 
        orders.date, SUM(order_details.quantity) AS quantity
    FROM
        order_details
    JOIN orders ON orders.order_id = order_details.order_id
    GROUP BY orders.date) AS order_quantity;

-- # --
    
## 10. determine the top 3 pizzas baised on revenue 

SELECT 
    pizza_type.name_,
    SUM(order_details.quantity * pizzas.price) AS revenue
FROM
    pizza_type
        JOIN
    pizzas ON pizza_type.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_type.name_
ORDER BY revenue DESC
LIMIT 3;

-- # --

## 11.calculate the percentage contibution of each pizza type to total revenue 
SELECT 
    pizza_type.category,
    round(sum(order_details.quantity * pizzas.price) / (SELECT 
            ROUND(SUM(order_details.quantity * pizzas.price),
                         2) AS total_sale
        FROM
            order_details
                JOIN
            pizzas ON order_details.pizza_id = pizzas.pizza_id) * 100,2) AS revenue
FROM
    pizza_type
        JOIN
    pizzas ON pizza_type.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_type.category
ORDER BY revenue DESC;

-- # --

## 12 Analyze the cumulative revenue generated over time 

select date,sum(revenue) over(order by date) as cum_revenue 
from
(SELECT 
    orders.date, SUM(order_details.quantity * price) AS revenue
FROM
    order_details
        JOIN
    orders ON order_details.order_id = orders.order_id
        JOIN
    pizzas ON pizzas.pizza_id = order_details.pizza_id
GROUP BY orders.date) as sales;
 
 -- # --
 
## 13.determine the ordered top 3 pizza type based on revenue for each pizza category ##


select name_,revenue,ranks from
(select category,name_, revenue, 
rank() over(partition by category order by revenue desc) as ranks 
from
(select pizza_type.category , pizza_type.name_ , sum((order_details.quantity) * pizzas.price) as revenue FROM
    order_details
        JOIN
    pizzas ON order_details.pizza_id = pizzas.pizza_id
        JOIN
    pizza_type ON pizzas.pizza_type_id = pizza_type.pizza_type_id 
    group by pizza_type.category, pizza_type.name_) as a )as b 
    where ranks <=3;
